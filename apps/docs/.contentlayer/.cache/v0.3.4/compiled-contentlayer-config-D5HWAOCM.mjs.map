{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files'\n\nconst Author = defineDocumentType(() => ({\n\tname: 'Author',\n\tfilePathPattern: `authors/**/*.mdx`,\n\tfields: {\n\t\tname: { type: 'string', required: true },\n\t\tdescription: { type: 'string', required: false },\n\t\tavatar: { type: 'string', required: true },\n\t\ttwitterHandle: { type: 'string', required: false },\n\t},\n\tcomputedFields: {\n\t\tslug: {\n\t\t\ttype: 'string',\n\t\t\tresolve: (author) => author._raw.sourceFileName.replace('.mdx', ''),\n\t\t},\n\t},\n}))\n\nconst Category = defineDocumentType(() => ({\n\tname: 'Category',\n\tfilePathPattern: `categories/**/*.mdx`,\n\tfields: {\n\t\tname: { type: 'string', required: true },\n\t\tdescription: { type: 'string', required: false },\n\t},\n\tcomputedFields: {\n\t\tslug: {\n\t\t\ttype: 'string',\n\t\t\tresolve: (category) => category._raw.sourceFileName.replace('.mdx', ''),\n\t\t},\n\t},\n}))\n\nconst Post = defineDocumentType(() => ({\n\tname: 'Post',\n\tfilePathPattern: `posts/**/*.mdx`,\n\tfields: {\n\t\ttitle: { type: 'string', required: true },\n\t\texcerpt: { type: 'string', required: true },\n\t\tthumbnail: { type: 'string', required: true },\n\t\tdate: { type: 'date', required: true },\n\t\tcategory: { type: 'enum', options: ['release-notes', 'announcements', 'product'] },\n\t\tauthors: { type: 'list', of: { type: 'string' }, required: true },\n\t},\n\tcomputedFields: {\n\t\tslug: {\n\t\t\ttype: 'string',\n\t\t\tresolve: (post) => post._raw.sourceFileName.replace('.mdx', ''),\n\t\t},\n\t},\n}))\n\nexport default makeSource({\n\tcontentDirPath: 'content/blog',\n\tdocumentTypes: [Post, Category, Author],\n})\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAE/C,IAAM,SAAS,mBAAmB,OAAO;AAAA,EACxC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACP,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,aAAa,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC/C,QAAQ,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACzC,eAAe,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,EAClD;AAAA,EACA,gBAAgB;AAAA,IACf,MAAM;AAAA,MACL,MAAM;AAAA,MACN,SAAS,CAAC,WAAW,OAAO,KAAK,eAAe,QAAQ,QAAQ,EAAE;AAAA,IACnE;AAAA,EACD;AACD,EAAE;AAEF,IAAM,WAAW,mBAAmB,OAAO;AAAA,EAC1C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACP,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,aAAa,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,EAChD;AAAA,EACA,gBAAgB;AAAA,IACf,MAAM;AAAA,MACL,MAAM;AAAA,MACN,SAAS,CAAC,aAAa,SAAS,KAAK,eAAe,QAAQ,QAAQ,EAAE;AAAA,IACvE;AAAA,EACD;AACD,EAAE;AAEF,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACtC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACP,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC1C,WAAW,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC5C,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,UAAU,EAAE,MAAM,QAAQ,SAAS,CAAC,iBAAiB,iBAAiB,SAAS,EAAE;AAAA,IACjF,SAAS,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,GAAG,UAAU,KAAK;AAAA,EACjE;AAAA,EACA,gBAAgB;AAAA,IACf,MAAM;AAAA,MACL,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,KAAK,KAAK,eAAe,QAAQ,QAAQ,EAAE;AAAA,IAC/D;AAAA,EACD;AACD,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACzB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,UAAU,MAAM;AACvC,CAAC;",
  "names": []
}
